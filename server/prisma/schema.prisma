// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

enum Department {
  DEPARTMENT1
  DEPARTMENT2
  DEPARTMENT3
}

model User {
  id                    Int                     @id @default(autoincrement())
  firstname             String                  @db.VarChar(255)
  lastname              String                  @db.VarChar(255)
  email                 String    
  role                  Role                    @default(user)
  hashedPassword        String
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt            
  hashedRT              String?
  lastLoggedInTime      DateTime?
  phone                 String?
  image                 Image?
  student               Student?
  coordinator           Coordinator?
  supervisor            Superviser?
}


model Student {
  id                    Int                     @id @default(autoincrement())
  userId                Int                     @unique
  studentNumber         Int
  postalAddr            Int
  applications          Application[]          
  user                  User                    @relation(fields: [userId], references: [id])
}

model Superviser {
  id                    Int                     @id @default(autoincrement())
  userId                Int                     @unique
  position              String
  companyId             Int
  company               Company                 @relation(fields:[companyId], references:[id])
  user                  User                    @relation(fields: [userId], references: [id])
}

model Coordinator {
  id                    Int                     @id @default(autoincrement())
  userId                Int                     @unique
  department            Department
  user                  User                    @relation(fields: [userId], references: [id])
}


model Application {
  id                    Int                     @id @default(autoincrement())
  studentId             Int                     @unique
  resumeId              Int                     @unique
  name                  String
  resume                Resume                  @relation(fields: [resumeId], references: [id])
  student               Student                 @relation(fields:[studentId], references:[id])
}

model Company {
  id                    Int                     @id @default(autoincrement())
  workingFields         String[]
  postalAddr            Int
  fax                   Int?        
  telephoneNumber       String
  email                 String
  webAddr               String
  description           String
  superviser            Superviser[]
}

model Verification {
  id                    Int                     @id @default(autoincrement())
  email                 String                  @unique
  try                   Int                     @default(0)
  code                  String
  lastResendTime        DateTime
}

model Image {
  id                    Int                     @id @default(autoincrement())
  url                   String
  userId                Int                     @unique
  isVerified            Boolean                 @default(false)
  createdAt             DateTime
  updatedAt             DateTime
  size                  Int                     @default(0)
  type                  String                  @default("")
  user                  User                    @relation(fields: [userId], references: [id])
}

model Resume {
  id                    Int                     @id @default(autoincrement())
  url                   String
  application           Application?           
}